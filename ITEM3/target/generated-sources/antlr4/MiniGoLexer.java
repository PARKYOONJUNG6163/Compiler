// Generated from MiniGo.g4 by ANTLR 4.4
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MiniGoLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__18=1, T__17=2, T__16=3, T__15=4, T__14=5, T__13=6, T__12=7, T__11=8, 
		T__10=9, T__9=10, T__8=11, T__7=12, T__6=13, T__5=14, T__4=15, T__3=16, 
		T__2=17, T__1=18, T__0=19, VAR=20, FUNC=21, FMT=22, FOR=23, IF=24, ELSE=25, 
		RETURN=26, OR=27, AND=28, LE=29, GE=30, EQ=31, NE=32, VOID=33, FLOAT32=34, 
		FLOAT64=35, INT64=36, INT32=37, INT16=38, IDENT=39, LITERAL=40, DecimalConstant=41, 
		OctalConstant=42, HexadecimalConstant=43, RealConstant=44, WS=45;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'"
	};
	public static final String[] ruleNames = {
		"T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", 
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "VAR", "FUNC", "FMT", "FOR", "IF", "ELSE", "RETURN", "OR", 
		"AND", "LE", "GE", "EQ", "NE", "VOID", "FLOAT32", "FLOAT64", "INT64", 
		"INT32", "INT16", "IDENT", "LITERAL", "DecimalConstant", "OctalConstant", 
		"HexadecimalConstant", "RealConstant", "WS"
	};


	public MiniGoLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MiniGo.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2/\u0117\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3"+
		"\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3"+
		"\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3"+
		"\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3"+
		"\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3"+
		"\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3"+
		" \3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3(\3(\7(\u00e2\n(\f(\16(\u00e5\13(\3)\3)\3)\3)\5)\u00eb\n)\3*\3"+
		"*\3*\7*\u00f0\n*\f*\16*\u00f3\13*\5*\u00f5\n*\3+\3+\7+\u00f9\n+\f+\16"+
		"+\u00fc\13+\3,\3,\3,\6,\u0101\n,\r,\16,\u0102\3-\6-\u0106\n-\r-\16-\u0107"+
		"\3-\3-\7-\u010c\n-\f-\16-\u010f\13-\3.\6.\u0112\n.\r.\16.\u0113\3.\3."+
		"\2\2/\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/\3\2\n\5\2C\\aac|\6\2\62;C\\aac"+
		"|\3\2\63;\3\2\62;\3\2\629\4\2ZZzz\5\2\62;CHch\5\2\13\f\17\17\"\"\u0121"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\3]\3\2\2\2\5_\3\2\2\2\7a\3"+
		"\2\2\2\tc\3\2\2\2\13e\3\2\2\2\rh\3\2\2\2\17k\3\2\2\2\21m\3\2\2\2\23o\3"+
		"\2\2\2\25q\3\2\2\2\27s\3\2\2\2\31u\3\2\2\2\33w\3\2\2\2\35y\3\2\2\2\37"+
		"{\3\2\2\2!}\3\2\2\2#\177\3\2\2\2%\u0081\3\2\2\2\'\u0083\3\2\2\2)\u0085"+
		"\3\2\2\2+\u0089\3\2\2\2-\u008e\3\2\2\2/\u0092\3\2\2\2\61\u0096\3\2\2\2"+
		"\63\u0099\3\2\2\2\65\u009e\3\2\2\2\67\u00a5\3\2\2\29\u00a8\3\2\2\2;\u00ac"+
		"\3\2\2\2=\u00af\3\2\2\2?\u00b2\3\2\2\2A\u00b5\3\2\2\2C\u00b8\3\2\2\2E"+
		"\u00bd\3\2\2\2G\u00c5\3\2\2\2I\u00cd\3\2\2\2K\u00d3\3\2\2\2M\u00d9\3\2"+
		"\2\2O\u00df\3\2\2\2Q\u00ea\3\2\2\2S\u00f4\3\2\2\2U\u00f6\3\2\2\2W\u00fd"+
		"\3\2\2\2Y\u0105\3\2\2\2[\u0111\3\2\2\2]^\7\61\2\2^\4\3\2\2\2_`\7}\2\2"+
		"`\6\3\2\2\2ab\7]\2\2b\b\3\2\2\2cd\7>\2\2d\n\3\2\2\2ef\7-\2\2fg\7-\2\2"+
		"g\f\3\2\2\2hi\7/\2\2ij\7/\2\2j\16\3\2\2\2kl\7\177\2\2l\20\3\2\2\2mn\7"+
		"?\2\2n\22\3\2\2\2op\7_\2\2p\24\3\2\2\2qr\7@\2\2r\26\3\2\2\2st\7#\2\2t"+
		"\30\3\2\2\2uv\7\'\2\2v\32\3\2\2\2wx\7*\2\2x\34\3\2\2\2yz\7+\2\2z\36\3"+
		"\2\2\2{|\7,\2\2| \3\2\2\2}~\7-\2\2~\"\3\2\2\2\177\u0080\7.\2\2\u0080$"+
		"\3\2\2\2\u0081\u0082\7/\2\2\u0082&\3\2\2\2\u0083\u0084\7\60\2\2\u0084"+
		"(\3\2\2\2\u0085\u0086\7x\2\2\u0086\u0087\7c\2\2\u0087\u0088\7t\2\2\u0088"+
		"*\3\2\2\2\u0089\u008a\7h\2\2\u008a\u008b\7w\2\2\u008b\u008c\7p\2\2\u008c"+
		"\u008d\7e\2\2\u008d,\3\2\2\2\u008e\u008f\7h\2\2\u008f\u0090\7o\2\2\u0090"+
		"\u0091\7v\2\2\u0091.\3\2\2\2\u0092\u0093\7h\2\2\u0093\u0094\7q\2\2\u0094"+
		"\u0095\7t\2\2\u0095\60\3\2\2\2\u0096\u0097\7k\2\2\u0097\u0098\7h\2\2\u0098"+
		"\62\3\2\2\2\u0099\u009a\7g\2\2\u009a\u009b\7n\2\2\u009b\u009c\7u\2\2\u009c"+
		"\u009d\7g\2\2\u009d\64\3\2\2\2\u009e\u009f\7t\2\2\u009f\u00a0\7g\2\2\u00a0"+
		"\u00a1\7v\2\2\u00a1\u00a2\7w\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7p\2\2"+
		"\u00a4\66\3\2\2\2\u00a5\u00a6\7q\2\2\u00a6\u00a7\7t\2\2\u00a78\3\2\2\2"+
		"\u00a8\u00a9\7c\2\2\u00a9\u00aa\7p\2\2\u00aa\u00ab\7f\2\2\u00ab:\3\2\2"+
		"\2\u00ac\u00ad\7>\2\2\u00ad\u00ae\7?\2\2\u00ae<\3\2\2\2\u00af\u00b0\7"+
		"@\2\2\u00b0\u00b1\7?\2\2\u00b1>\3\2\2\2\u00b2\u00b3\7?\2\2\u00b3\u00b4"+
		"\7?\2\2\u00b4@\3\2\2\2\u00b5\u00b6\7#\2\2\u00b6\u00b7\7?\2\2\u00b7B\3"+
		"\2\2\2\u00b8\u00b9\7x\2\2\u00b9\u00ba\7q\2\2\u00ba\u00bb\7k\2\2\u00bb"+
		"\u00bc\7f\2\2\u00bcD\3\2\2\2\u00bd\u00be\7h\2\2\u00be\u00bf\7n\2\2\u00bf"+
		"\u00c0\7q\2\2\u00c0\u00c1\7c\2\2\u00c1\u00c2\7v\2\2\u00c2\u00c3\7\65\2"+
		"\2\u00c3\u00c4\7\64\2\2\u00c4F\3\2\2\2\u00c5\u00c6\7h\2\2\u00c6\u00c7"+
		"\7n\2\2\u00c7\u00c8\7q\2\2\u00c8\u00c9\7c\2\2\u00c9\u00ca\7v\2\2\u00ca"+
		"\u00cb\78\2\2\u00cb\u00cc\7\66\2\2\u00ccH\3\2\2\2\u00cd\u00ce\7k\2\2\u00ce"+
		"\u00cf\7p\2\2\u00cf\u00d0\7v\2\2\u00d0\u00d1\78\2\2\u00d1\u00d2\7\66\2"+
		"\2\u00d2J\3\2\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7p\2\2\u00d5\u00d6\7"+
		"v\2\2\u00d6\u00d7\7\65\2\2\u00d7\u00d8\7\64\2\2\u00d8L\3\2\2\2\u00d9\u00da"+
		"\7k\2\2\u00da\u00db\7p\2\2\u00db\u00dc\7v\2\2\u00dc\u00dd\7\63\2\2\u00dd"+
		"\u00de\78\2\2\u00deN\3\2\2\2\u00df\u00e3\t\2\2\2\u00e0\u00e2\t\3\2\2\u00e1"+
		"\u00e0\3\2\2\2\u00e2\u00e5\3\2\2\2\u00e3\u00e1\3\2\2\2\u00e3\u00e4\3\2"+
		"\2\2\u00e4P\3\2\2\2\u00e5\u00e3\3\2\2\2\u00e6\u00eb\5S*\2\u00e7\u00eb"+
		"\5U+\2\u00e8\u00eb\5W,\2\u00e9\u00eb\5Y-\2\u00ea\u00e6\3\2\2\2\u00ea\u00e7"+
		"\3\2\2\2\u00ea\u00e8\3\2\2\2\u00ea\u00e9\3\2\2\2\u00ebR\3\2\2\2\u00ec"+
		"\u00f5\7\62\2\2\u00ed\u00f1\t\4\2\2\u00ee\u00f0\t\5\2\2\u00ef\u00ee\3"+
		"\2\2\2\u00f0\u00f3\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f2"+
		"\u00f5\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f4\u00ec\3\2\2\2\u00f4\u00ed\3\2"+
		"\2\2\u00f5T\3\2\2\2\u00f6\u00fa\7\62\2\2\u00f7\u00f9\t\6\2\2\u00f8\u00f7"+
		"\3\2\2\2\u00f9\u00fc\3\2\2\2\u00fa\u00f8\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fb"+
		"V\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fd\u00fe\7\62\2\2\u00fe\u0100\t\7\2\2"+
		"\u00ff\u0101\t\b\2\2\u0100\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102\u0100"+
		"\3\2\2\2\u0102\u0103\3\2\2\2\u0103X\3\2\2\2\u0104\u0106\t\5\2\2\u0105"+
		"\u0104\3\2\2\2\u0106\u0107\3\2\2\2\u0107\u0105\3\2\2\2\u0107\u0108\3\2"+
		"\2\2\u0108\u0109\3\2\2\2\u0109\u010d\13\2\2\2\u010a\u010c\t\5\2\2\u010b"+
		"\u010a\3\2\2\2\u010c\u010f\3\2\2\2\u010d\u010b\3\2\2\2\u010d\u010e\3\2"+
		"\2\2\u010eZ\3\2\2\2\u010f\u010d\3\2\2\2\u0110\u0112\t\t\2\2\u0111\u0110"+
		"\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0111\3\2\2\2\u0113\u0114\3\2\2\2\u0114"+
		"\u0115\3\2\2\2\u0115\u0116\b.\2\2\u0116\\\3\2\2\2\r\2\u00e1\u00e3\u00ea"+
		"\u00f1\u00f4\u00fa\u0102\u0107\u010d\u0113\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}